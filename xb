#!/usr/bin/env python3

from signal import signal, SIGINT
import subprocess
import sys
import argparse

class colors:
    BLUE = '\033[94m'
    GREEN = '\033[92m'
    NORMAL = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


def handler(signal_received, frame):
    print()
    sys.exit(0)


def get_pkg_name(line):
    return line.split()[1].rpartition('-')[0]


def print_search(results):
    lines = []

    for index, result in enumerate(results):
        status, pkgname, rest = result.split(' ', 2)
        pkgname, ver = pkgname.rsplit('-', 1)

        if status == '[*]':
            color = colors.GREEN
        else:
            color = colors.BLUE

        index = f'{colors.BOLD}{index+1:<2}{colors.NORMAL}'
        status = f'{color}{status}{colors.NORMAL}'
        pkgname = f'{colors.BOLD}{pkgname}{colors.NORMAL}'
        
        lines.append(f'{index} {status} {pkgname} {ver} {rest}')
    print('\n'.join(reversed(lines)))


def check_pkg_exists(package):
    return subprocess.run(['xbps-query', '-R'] + package, stdout=subprocess.DEVNULL).returncode == 0


def install(packages):
    subprocess.run(['sudo', 'xbps-install', '-u'] + packages)


def remove(packages):
    subprocess.run(['sudo', 'xbps-remove'] + packages)


def search(keywords):
    results = subprocess.check_output(['xbps-query', '-Rs', keywords.pop(0)], universal_newlines=True).splitlines()
    if keywords:
        results = [line for line in results if all(k in line for k in keywords)]

    packages = []
    
    if len(results) > 1:
        print_search(results)

        print()
        print('Select (comma-separated)')
        choice = input('> ')

        if choice == '':
            print('Cancelled')
            sys.exit(1)
        for c in choice.split(','):
            try:
                c = int(c)
            except:
                continue
            if 0 < c <= len(results):
                packages.append(get_pkg_name(results[c-1]))
    elif len(results) == 1:
        packages.append(get_pkg_name(results[0]))
    else:
        print('No results found')
        sys.exit(0)

    if packages:
        install(packages)
    else:
        print('Nothing to do.')


def update():
    print('Checking for updates...')
    subprocess.run(['sudo', 'xbps-install', '-Su'])


def main(args):
    if sum(map(bool, [args.package, args.search, args.remove])) > 1:
        print("Invalid syntax, unable to mix and match packages/searching/removing")
        exit(1)
    if args.search:
        search(args.search)
    elif len(args.package) > 1:
        install(args.package)
    elif len(args.package) == 1:
        if check_pkg_exists(args.package):
            install(args.package)
        else:
            search(args.package)
    elif args.remove:
        remove(args.remove)
    else:
        update()


if __name__ == '__main__':
    signal(SIGINT, handler)

    parser = argparse.ArgumentParser(
        description='XBPS Package Manager wrapper',
        usage= '%(prog)s [-h] [ <pkgname(s)> | -s <keyword(s)> | -r <pkgname(s)> ]',
    )

    parser.add_argument('package', nargs='*', help='Package(s) to search/install')
    parser.add_argument('-s', '--search', nargs='+', metavar='KEYWORD', help='Searches using specified keyword(s)')
    parser.add_argument('-r', '--remove', nargs='+', metavar='PKGNAME', help='Package(s) to remove')
    args = parser.parse_args()
    
    main(args)
